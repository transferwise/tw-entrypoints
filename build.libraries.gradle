ext {
    springBootVersion = System.getenv("SPRING_BOOT_VERSION") ?: "3.3.1"

    libraries = [
            // explicit versions
            guava                       : "com.google.guava:guava:33.0.0-jre",
            jsqlParser                  : "com.github.jsqlparser:jsqlparser:5.2",
            spotbugsAnnotations             : "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}",
            springBootDependencies          : "org.springframework.boot:spring-boot-dependencies:${springBootVersion}",
            testContainersMariaDb       : "org.testcontainers:mariadb:1.19.3",
            twBaseUtils                 : "com.transferwise.common:tw-base-utils:1.12.3",
            twContext                       : "com.transferwise.common:tw-context:1.0.0",
            twContextStarter                : "com.transferwise.common:tw-context-starter:1.0.0",
            twGracefulShutdown          : 'com.transferwise.common:tw-graceful-shutdown:2.14.2',
            twGracefulShutdownInterfaces: 'com.transferwise.common:tw-graceful-shutdown-interfaces:2.14.2',
            twSpyqlCore                 : "com.transferwise.common:tw-spyql-core:1.6.1",
            twSpyqlStarter              : "com.transferwise.common:tw-spyql-starter:1.6.1",

            // versions managed by spring-boot-dependencies platform
            caffeine                        : "com.github.ben-manes.caffeine:caffeine",
            commonsLang3                    : "org.apache.commons:commons-lang3",
            flywayCore                      : "org.flywaydb:flyway-core",
            flywayMysql                     : 'org.flywaydb:flyway-mysql',

            hikariCp                        : "com.zaxxer:HikariCP",
            junitJupiter                    : "org.junit.jupiter:junit-jupiter",
            logbackClassic              : "ch.qos.logback:logback-classic",
            lombok                          : "org.projectlombok:lombok",
            mariadbJavaClient               : "org.mariadb.jdbc:mariadb-java-client",
            micrometerCore                  : "io.micrometer:micrometer-core",
            micrometerRegistryPrometheus    : "io.micrometer:micrometer-registry-prometheus",
            slf4jApi                        : "org.slf4j:slf4j-api",
            springBootConfigurationProcessor: "org.springframework.boot:spring-boot-configuration-processor",
            springBootStarter               : "org.springframework.boot:spring-boot-starter",
            springBootStarterActuator       : "org.springframework.boot:spring-boot-starter-actuator",
            springBootStarterJdbc           : "org.springframework.boot:spring-boot-starter-jdbc",
            springBootStarterTest           : "org.springframework.boot:spring-boot-starter-test",
    ]
}
